<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd   
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.2.xsd   
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd   
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.2.xsd">


	<!-- 这部分内容不懂 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- dataSource在ApplicationContext-dao.xml中已经注册bean了 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!--  以下内容根据http://www.springframework.org/schema/tx/spring-tx-4.2.xsd文件中的注释进行分析。
		tx:advice:配置spring的事务管理
		transaction-manager:定义了PlatformTransactionManager接口实现类的bean的name，如果该bean name为transactionManager，
				则可以不指定该属性，如果bean name不是transactionManager，则需要通过transaction-manager进行指定。
		===以下为attributes标签下的属性===
		method:与该事务属性关联的方法名，方法名可以使用通配符*。
		propagation：事务的的传播行为，选择值有7个，分别为：REQUIRED、SUPPORTS、MANDATORY、REQUIRES_NEW、
				NOT_SUPPORTED、NEVER、NESTED，默认值为REQUIRED。
		isolation：事务的隔离级别，默认值为DEFAULT,可选值有5个，分别为：
						DEFAULT：默认值，使用底层数据存储的隔离级别。
						READ_UNCOMMITTED:产生脏读、不可重复读、幻读
						READ_COMMITTED:产生不可重复读、幻读
						REPEATABLE_READ:产生幻读
						SERIALIZABLE:
		timeout：事务的超时，秒为单位
		read-only：指定事务是否是只读
		rollback-for:指定将会触发回滚的异常类型，比如：'com.foo.MyBusinessException,ServletException'
		no-rollback-for:指定忽略出发回滚的异常类型
	 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="select*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- 这部分内容不懂 -->
	<aop:config>
		<!-- In Spring, an Advisor is an aspect that contains just a single advice object associated with a pointcut
		expression. -->
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.wzd.ssm.service.impl.*.*(..))"/>
	</aop:config>
	
	

						
</beans>